---
title: "Demographic Metrics"
execute:
  echo: false
---
ARPAH cohort was defined as:

- Cancer condition concept ids
- An encounter within
  - NF
  - Tumor board
- Other

Below is the distribution of persons per year of birth. The average age of participants were xx.
```{r}
# set wrking directory
setwd("/workspaces/starr-oncology-data-lake-arpah/src")
```

```{r, message=FALSE, warning=FALSE, results='hide'}
library(DBI)
library(bigrquery)
library(readr)
library(stringr)

# Function to execute a BigQuery query and return the result as a DataFrame
run_bigquery_query <- function(project_id, sql_file_path) {
  credentials_path <- "/home/rstudio/.config/gcloud/application_default_credentials.json"
  # Set Google Cloud credentials
  Sys.setenv(GOOGLE_APPLICATION_CREDENTIALS = credentials_path)
  
  # Authenticate with BigQuery
  bq_auth(path = Sys.getenv("GOOGLE_APPLICATION_CREDENTIALS"))
  
  # Create BigQuery connection
  bq_conn <- dbConnect(
    bigrquery::bigquery(),
    project = project_id,
    use_legacy_sql = FALSE
  )
  
  # Load SQL from the specified file
  sql_query <- read_file(sql_file_path)
  sql_query <- str_c(sql_query, collapse = " ") ## for any line break

  # Execute the query and return results
  result_df <- tryCatch({
    query_result <- dbGetQuery(bq_conn, sql_query)
    print("Query executed successfully!")
    return(query_result)
  }, error = function(e) {
    print(paste("Query failed:", e$message))
    return(NULL)
  })
  
  # Disconnect from BigQuery
  dbDisconnect(bq_conn)
  end_time <- Sys.time()
  print(paste("Query execution time:", end_time - start_time))
  return(result_df)
}
```
```{r, message=FALSE, warning=FALSE, results='hide'}
# Parameters
project_id <- "som-rit-phi-oncology-prod"
sql_file_path<- "sql/arpah_age_metrics.sql"

# Execute the query
dat <- run_bigquery_query(project_id, sql_file_path)

# View the result
if (!is.null(dat)) {
  head(dat)
}
```

```{r, message=FALSE, warning=FALSE, results='hide'}
library(plotly)

create_bar_plot <- function(data, x_var, y_var, plot_title, x_axis_title, y_axis_title) {
  plot_ly(
    data = data, 
    x = data[[x_var]], 
    y = data[[y_var]], 
    type = 'bar', 
    marker = list(color = 'rgba(104, 198, 214, 0.7)', line = list(color = 'rgb(100, 173, 237)', width = 1.5))
  ) %>%
    layout(
       title = list(
        text = plot_title,
        x = 0.01,  # Align to the left (0 = far left, 1 = far right)
        xanchor = "left"
      ),
      xaxis = list(
        title = x_axis_title,
        tickangle = -45,
        showgrid = FALSE
      ),
      yaxis = list(
        title = y_axis_title,
        rangemode = "tozero"
      ),
      margin = list(b = 100),
      showlegend = FALSE
    )
}

```
```{r}
# Generate the Plot with Custom Titles
create_bar_plot(
  dat, 
  x_var = "birth_year", 
  y_var = "person_count", 
  plot_title = "Birth Year Distribution", 
  x_axis_title = "Year of Birth", 
  y_axis_title = "Counts (N)"
)
```
The age groups are as follow:
```{r, results='hide'}
# Parameters
project_id <- "som-rit-phi-oncology-prod"
sql_file_path<- "sql/arpah_age_cat_metrics.sql"

# Execute the query
age.dat <- run_bigquery_query(project_id, sql_file_path)
print(age.dat)
```
```{r}
#install.packages("gt")
library(gt)

age.dat %>%
  gt() %>%
  cols_label(
    current_age_groups = "Age Group",
    count_per1000 = "Count (K)")%>%
  tab_header(
    title = "Age Category Metrics",
    subtitle = "ARPAH Cohort"
  ) %>%
  fmt_number(
    columns = where(is.numeric),
    decimals = 2
  ) %>%  tab_options(
    table.font.size = px(14),
    heading.align = "left",
    table.border.top.color = "darkred",
      table.align = "left"
  ) %>%
  opt_row_striping()
```
\newpage  
```{r, message=FALSE, warning=FALSE, results='hide'}
project_id <- "som-rit-phi-oncology-prod"
sql_file_path<- "sql/arpah_demographic_all.sql"

# Execute the query
all.dat <- run_bigquery_query(project_id, sql_file_path)
print(all.dat)
```
```{r}
library(gt)

all.dat %>%
  gt() %>%
  cols_label(
    description = "Variable",
    counts = "Count (N)",
    percents="%")%>%
  tab_header(
    title = "All Category Metrics",
    subtitle = "ARPAH Cohort"
  ) %>%
  fmt_number(
    columns = where(is.numeric),
    decimals = 2
  ) %>%  tab_options(
    table.font.size = px(14),
    heading.align = "left",
    table.border.top.color = "darkred",
      table.align = "left"
  ) %>%
  opt_row_striping()
```
