---
title: "ARPA-H Demographic & Clinical Metrics"
execute:
  echo: false
---
### Release Version: Feb 2025
The Advanced Research Projects Agency for Health (ARPA-H) is a research funding agency that supports transformative biomedical and health breakthroughs â€“ ranging from the molecular to the societal to provide health solutions for all.
For more information, you can [Visit Stanford News](https://med.stanford.edu/news/all-news/2024/10/arpa-h-contracts).


## **ARPA-H Cohort**
The ARPA-H cohort is defined as all patients with an existing record in STARR-OMOP who are either listed in the Stanford Cancer Registry (also known as Neural Frame), or have had a Tumor Board encounter. As of the February xxxx, 2025 OMOP population, 200,262 patients met the criteria for ARPA-H cohort.
  - Neural Frame: Defined as research eligible patients with case records in Neural Frame (aka Stanford Cancer Registry)
  - Tumor Board encounter: These encounters are defined using the EPIC patient encounter data tables(23k)

# **Age Distribution**

Below is the distribution of persons per year of birth. 
```{r, message=FALSE, warning=FALSE, results='hide'}
# set wrking directory
setwd("/workspaces/starr-oncology-data-lake-arpah/src")
source("/workspaces/starr-oncology-data-lake-arpah/src/R/all_function.R", encoding = "UTF-8")
```

```{r, message=FALSE, warning=FALSE, results='hide'}
# Parameters
project_id <- "som-rit-phi-oncology-prod"
sql_file_path<- "sql/arpah_cohort/arpah_age_metrics.sql"

# Execute the query
dat <- run_bigquery_query(project_id, sql_file_path)

# View the result
if (!is.null(dat)) {
  head(dat)
}
```

```{r, message=FALSE, warning=FALSE}
library(plotly)

# Generate the Plot with Custom Titles
create_bar_plot(
  dat, 
  x_var = "birth_year", 
  y_var = "person_count", 
  plot_title = "Birth Year Distribution", 
  x_axis_title = "Year of Birth", 
  y_axis_title = "Counts (N)"
)
```
```{r, results='hide'}
# Parameters
project_id <- "som-rit-phi-oncology-prod"
sql_file_path<- "sql/arpah_cohort/arpah_age_cat_metrics.sql"

# Execute the query
age.dat <- run_bigquery_query(project_id, sql_file_path)
print(age.dat)
```


```{r, message=FALSE, warning=FALSE, results='hide'}
project_id <- "som-rit-phi-oncology-prod"
sql_file_path<- "sql/arpah_cohort/arpah_demographic_all.sql"

# Execute the query
demographics <- run_bigquery_query(project_id, sql_file_path)
print(demographics)
```
```{r, message=FALSE, warning=FALSE, results='hide'}
all.dat = demographics %>%
dplyr::mutate(
    Variable = dplyr::case_when(
      grepl("n_age", description) ~ "Age",
      grepl("n_sex", description) ~ "Sex",
      grepl("n_race", description) ~ "Race",
       grepl("n_ethnicity", description) ~ "Ethnicity",
      grepl("n_patients", description) ~ "Total",
      grepl("pct", description) ~ NA_character_  # Skip pure percent entries for the type
    )) %>%
  select(Variable, everything())
  print(all.dat)
dim(all.dat)
colnames(all.dat)[1]<-"Charactersitics"
```
```{r, message=FALSE, warning=FALSE, results='hide'}
library(gt)
all.dat$percents=100*(as.numeric(all.dat$percents))
dplyr::glimpse (all.dat)
all.dat =all.dat %>% mutate(values=c("Total number of pts", "0-17", "18-44", "45-64", "65+",
"No OMOP Visit", "Male", "Female", "Other", "Unknown", "American Indian-Alaska Native",
"Asian", "Native Hawaii", "Black", "White", "Other-Unknown", "Hispanic Latino ", "NOT Hispanic Latino", "Other-Missing" ))

 all.dat=all.dat%>% select(Charactersitics, values, everything())
```
# **Demographic Summary of Patient Population**

This report presents a comprehensive demographic analysis of patients within the ARPA-H population (~200k) derived from OMOP Common Data Model. The demographic categories examined included Age, Sex, Race, and Ethnicity.
```{r, message=FALSE, warning=FALSE}
all.dat %>% select (-description) %>%
  gt() %>%
  cols_label(
    Charactersitics = "Charactersitics",
    values="",
    counts = "Count (N)",
    percents = "%"
  ) %>%
  tab_header(
    title = "All Category Metrics",
    subtitle = "ARPAH Cohort"
  ) %>%
  fmt_number(
    columns = where(is.numeric),
    decimals = 0
  ) %>%
  cols_align(
    align = "center",
    columns = vars(counts, percents)  # Specify the columns to center
  ) %>%
  tab_options(
    table.font.size = px(14),
    heading.align = "left",
    table.border.top.color = "darkred",
    table.align = "left"
  ) %>%
  opt_row_striping()
```

This demographic analysis provides insights into the composition of the patient population, highlighting specific trends and proportions across age, sex, race, and ethnicity. 



# **ARPAH Clinical Metrics**

```{r, message=FALSE, warning=FALSE, results='hide'}
## pull arpah clinical metrics ##
credentials_path <- "/home/rstudio/.config/gcloud/application_default_credentials.json"
folder_path <- "/workspaces/starr-oncology-data-lake-arpah/src/sql/arpah_clinical"
 project_name = "som-rit-phi-oncology-prod"
res_arpah <- fetch_data_from_sql(credentials_path, project_name, folder_path)
```

```{r, message=FALSE, warning=FALSE, results='hide'}
credentials_path <- "/home/rstudio/.config/gcloud/application_default_credentials.json"
folder_path_tb <- "/workspaces/starr-oncology-data-lake-arpah/src/sql/tumor_board"
project_name = "som-rit-phi-oncology-prod"
res_tb <- fetch_data_from_sql(credentials_path, project_name, folder_path_tb)
```
```{r, message=FALSE, warning=FALSE, results='hide'}
colnames(res_arpah)[1]<-"pt_count_arph"
res_tb$sql_file_name=gsub("tumor_board_","", res_tb$sql_file_name)
colnames(res_tb)[1]<-"pt_count_tb"
```
```{r, message=FALSE, warning=FALSE, results='hide'}
res_all=res_arpah %>% inner_join(res_tb, by="sql_file_name")
print(res_all)
```
```{r, message=FALSE, warning=FALSE, results='hide'}
res_all <- res_all %>%
  mutate(
    metric = case_when(
      sql_file_name == "note_path_cyto_person_metrics.sql" ~ "With pathology/cytology clinical report", 
      sql_file_name == "note_imaging_person_metrics.sql" ~ "With imaging reports, also a proxy for radiology imaging data",
      sql_file_name == "philips_person_metrics.sql" ~ "Have molecular mutation structured data (Philips ISPM)",
      sql_file_name == "vital_status_person_metrics.sql" ~ "Present Hospital or Stanford Cancer Registry death date", 
      sql_file_name == "omop_chemo_person_metrics.sql" ~ "Given chemo medication",
      sql_file_name == "aria_person_metrics.sql" ~ "Given radiation therapy (ARIA)",
      sql_file_name == "wsi_beaker_path_person_metrics.sql" ~ "With WSI (based on EPIC Beaker AP/Pathology, starting from 2022)",
      sql_file_name == "powerpath_beaker_path_person_metrics.sql" ~ "Pathology beaker",
      sql_file_name == "powerpath_path_person_metrics.sql" ~ "Pathology path",
      TRUE ~ NA_character_  
    )
  )
print(res_all)
res_all=res_all %>% filter(!is.na(metric))
print(res_all)

```
```{r, message=FALSE, warning=FALSE, results='hide'}
res_all<-res_all%>% select(metric, everything())
```
```{r,, message=FALSE, warning=FALSE}
## add percentages ##
res_all <- res_all %>%
  mutate(
    N_perc_arpah = calculate_N_percent(pt_count_arph, den=200262),
    N_perc_tb=calculate_N_percent(pt_count_tb, den=23497)
  )

```
```{r, message=FALSE, warning=FALSE}

res_all%>%select (metric,N_perc_arpah,N_perc_tb )%>%
  gt() %>%
  cols_label(
    metric = "Clinical Metrics",
    N_perc_arpah = "ARPAH N(%) \n (Total=200,262)",
    N_perc_tb="Tumor Board N(%)\n (Total=23,497)",
  ) %>%
  tab_header(
    title = "ARPA-H Cohort - Clinical Metrics",
    subtitle = ""
  ) %>%
  fmt_number(
    columns = where(is.numeric),
    decimals = 0
  ) %>%
  cols_align(
    align = "center",
    columns = vars(N_perc_arpah, N_perc_tb)  # Specify the columns to center
  ) %>%
  tab_options(
    table.font.size = px(14),
    heading.align = "left",
    table.border.top.color = "darkred",
    table.align = "left"
  ) %>%
  opt_row_striping()%>%
  tab_footnote(
    footnote = "N(%) represents the count per 1000 and the corresponding percentage of the total."
  )
```

# **Thoracic Cancer Clinical Metrics**

The following metrics were identified within ARPAH cohort (200k) for indiviulas with thoracic cancer.
```{r, message=FALSE, warning=FALSE, results='hide'}
credentials_path <- "/home/rstudio/.config/gcloud/application_default_credentials.json"
folder_path_tc <- "/workspaces/starr-oncology-data-lake-arpah/src/sql/scr/thoracic"
project_name = "som-rit-phi-oncology-prod"
res_tc <- fetch_data_from_sql(credentials_path, project_name, folder_path_tc)
```

```{r, message=FALSE, warning=FALSE, results='hide'}
res_tc <- res_tc%>%
  mutate(
    metric = case_when(
      sql_file_name == "scr_thoracic_person_metrics.sql" ~ "Number of patients in Neural Frame and diagnosed with thoracic cancer", 
      sql_file_name == "scr_thoracic_vital_status_person_metrics.sql" ~ "Number of patients in Neural Frame and diagnosed with thoracic cancer with a death date",
      sql_file_name == "scr_thoracic_tb_person_metrics.sql" ~ "Number of patients diagnosed with thoracic cancer and have a tumor board encounter",
      sql_file_name == "scr_thoracic_tb_death.sql" ~ "Number of patients diagnosed with thoracic cancer and have a tumor board encounter with a death date",
      TRUE ~ NA_character_  
    )
  )
print(res_tc)
```
```{r, message=FALSE, warning=FALSE, results='hide'}
res_tc=res_tc %>% select(metric, patient_count)%>% filter(!is.na(metric))%>% arrange(desc(patient_count))

```
```{r, message=FALSE, warning=FALSE}

res_tc%>%
  gt() %>%
  cols_label(
    metric = "Clinical Metrics",
   patient_count = "Patient Count",
  ) %>%
  tab_header(
    title = "Thoracic Cancer",
    subtitle = ""
  ) %>%
  fmt_number(
    columns = where(is.numeric),
    decimals = 0
  ) %>%
  cols_align(
    align = "center",
    columns = vars(patient_count)  # Specify the columns to center
  ) %>%
  tab_options(
    table.font.size = px(14),
    heading.align = "left",
    table.border.top.color = "darkred",
    table.align = "left"
  ) %>%
  opt_row_striping()%>%
  tab_footnote(
    footnote = "Death date was defined either within STARR-OMOP or Neural Frame"
  )
```
