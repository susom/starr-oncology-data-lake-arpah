---
title: "Oncology Cohort Characteristics"
execute:
  echo: false
output: html
---

```{r setup, include=FALSE}
if (!require("UpSetR")) {
  install.packages("UpSetR")
}
if (!require("viridis")) {
  install.packages("viridis")
}
library(viridis)
```




```{r, message=FALSE, warning=FALSE, results='hide'}
rm(list=ls())
source("/workspaces/starr-oncology-data-lake-arpah/src/R/all_function.R", encoding = "UTF-8")
yaml_file_path <-  "/workspaces/starr-oncology-data-lake-arpah/src/sql_params.yml"

```

### **Population Summary**
As of the May 2025 oncology OMOP population:

```{r, message=FALSE, warning=FALSE, results='hide'}
den <- "/workspaces/starr-oncology-data-lake-arpah/src/sql/arpah_cohort/arpah_denominators.sql"
den_res <- fetch_data_from_sql_file(den, yaml_file_path)

den_res=den_res %>% arrange(desc(percentage))
```


*Release Version: May 2025 (IRB76049)*

The oncology OMOP cohort is defined as all patients with an existing record in STARR-OMOP who are either listed in the Stanford Cancer Registry (also known as Neural Frame), or have had a Tumor Board encounter. As of the May 2025 OMOP population, `r format( den_res$counts_pts[den_res$data_set=="Oncology OMOP"][1], big.mark = ",")` patients met the criteria for cancer cohort.

  - **Neural Frame:** Defined as research-eligible patients with case records in Neural Frame (aka Stanford Cancer Registry)

  - **Tumor Board encounter:** These encounters are defined using the EPIC patient encounter data tables

  - **Philips ISPM:** Includes genomic testing information from the Philips IntelliSpace Precision Medicine (ISPM) genomics database at Stanford.
  These metrics have been generated using the latest Stanford OMOP data including the image occurrence,  Neural Frame data, and Philips ISPM.

  - **OMOP Image Occurrence:** A record of image series from the Vendor Neutral Archive. This does not include Echocardiograms, Ophthalmology images, or Pathology slides at present. We are also only including image occurrences that can be linked to the clarity procedure order information.

```{r, message=FALSE, warning=FALSE}
## summary table of dens
labels <- c(
  "data_set"="Data Source",
  "counts_pts" = "Number of Patients",
   "percentage" = "Percent"
)

create_gt_table_v1(
  data = den_res, 
  columns = c( "data_set","counts_pts", "percentage"), 
  labels = labels, 
   subtitle_text = "",
  footnote_text = "")
```
```{r, message=FALSE, warning=FALSE, results='hide'}
sql_ids <- "/workspaces/starr-oncology-data-lake-arpah/src/sql/arpah_cohort/arpah_overlap_metrics.sql"
res <- fetch_data_from_sql_file(sql_ids, yaml_file_path)
head (res)
```


### Distribution of Data Sources


```{r, message=FALSE, warning=FALSE, results='hide'}
# Create donut chart visualization
library(ggplot2)
library(dplyr)
library(viridis)

# Prepare data for the donut chart
donut_data <- den_res %>%
  mutate(
    ymax = cumsum(percentage),
    ymin = c(0, head(ymax, n=-1)),
    labelPosition = (ymax + ymin) / 2,
    label = paste0(data_set, "\n",  
                  "(", round(percentage, 1), "%)"))

# Create the donut chart
ggplot(donut_data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=data_set)) +
  geom_rect() +
  geom_text(x=5.1, aes(y=labelPosition, label=label), size=4) +
  scale_fill_viridis_d(option = "D") +
  coord_polar(theta="y") +
  xlim(c(0, 4)) +
  theme_void() +
  theme(legend.position = "none") +
  labs(title = "Patient Distribution Across Data Sources",
       subtitle = "Shows the total number of patients in each data source")
```

### Patient Overlap Between Data Sources

The plot below shows how patients overlap between different data sources:
- Each row on the left shows the total size of each data source

- The connected dots in the middle show which combinations of data sources exist

- The bars show how many patients are in each combination

- For example, if dots are connected for "Oncology OMOP" and "Neural Frame", the bar above shows how many patients are in both sources

```{r, message=FALSE, warning=FALSE}
library(UpSetR)
library(tidyr)

# Convert the data to binary presence/absence matrix
overlap_matrix <- res %>%
  mutate(value = TRUE) %>%
  pivot_wider(
    names_from = data_set,
    values_from = value,
    values_fill = FALSE
  )

# Create the UpSet plot with lighter colors and better labeling
upset(
  fromList(list(
    "Oncology OMOP" = overlap_matrix$person_id[overlap_matrix$`Oncology OMOP`],
    "Image Occurrence" = overlap_matrix$person_id[overlap_matrix$`Image Occurrence`],
    "Neural Frame" = overlap_matrix$person_id[overlap_matrix$`Neural Frame`],
    "Philips ISPM" = overlap_matrix$person_id[overlap_matrix$`Philips ISPM`]
  )),
  sets = c("Oncology OMOP", "Image Occurrence", "Neural Frame", "Philips ISPM"),
  order.by = "freq",
  mainbar.y.label = "Number of Patients",
  sets.x.label = "",
  #sets.x=FALSE, ## remove the xaxis
  point.size = 5,
  line.size = 1,
  text.scale = 1.5,
  mb.ratio = c(0.6, 0.4),
  keep.order = TRUE,
  matrix.color = "#8B0000",  
  main.bar.color = "#8B0000",
  sets.bar.color = NA,
  scale.sets = "binary",
  number.angles = 0 ,# Make ,numbers horizontal
  #text.scale = c(1.3, 1.3, 1)  # Increase text size for better readability
)
```

```{r}
```



