---
title: "Oncology Cohort"
execute:
  echo: false
output: html
---

```{r setup, message=FALSE, warning=FALSE, results='hide'}
rm(list=ls())
source("/workspaces/starr-oncology-data-lake-arpah/src/R/all_function.R", encoding = "UTF-8")
yaml_file_path <-  "/workspaces/starr-oncology-data-lake-arpah/src/may_2025/sql_params.yml"

```

### **Population Summary**
As of the May 2025 oncology OMOP population:

```{r, message=FALSE, warning=FALSE, results='hide'}
den <- "/workspaces/starr-oncology-data-lake-arpah/src/may_2025/sql/arpah_cohort/arpah_denominators.sql"
den_res <- fetch_data_from_sql_file(den, yaml_file_path)

den_res=den_res %>% arrange(desc(percentage))
```


*Release Version: May 2025 (IRB76049)*

The oncology OMOP cohort is defined as all patients with an existing record in STARR-OMOP who are either listed in the Stanford Cancer Registry (also known as Neural Frame), or have had a Tumor Board encounter. As of the May 2025 OMOP population, `r format( den_res$counts_pts[den_res$data_set=="Oncology OMOP (Cohort)"][1], big.mark = ",")` patients met the criteria for cancer cohort.

  - **Neural Frame:** Defined as research-eligible patients with case records in Neural Frame (aka Stanford Cancer Registry).
    - [Neural Frame Metrics](neural_frame.qmd)

  - **Tumor Board encounter:** These encounters are defined using the EPIC patient encounter data tables.

  - **Philips ISPM:** Includes genomic testing information from the Philips IntelliSpace Precision Medicine (ISPM) genomics database at Stanford.
    - [Philips ISPM Metrics](philips_metrics.qmd)

  - **OMOP Image Occurrence:** A record of image series from the Vendor Neutral Archive. This does not include Echocardiograms, Ophthalmology images, or Pathology slides at present. We are also only including image occurrences that can be linked to the clarity procedure order information.
    - [Image Occurrence Metrics](image_occ.qmd)


```{r, message=FALSE, warning=FALSE, results='hide'}
folder_path_tb <- "/workspaces/starr-oncology-data-lake-arpah/src/may_2025/sql/tumor_board/tumor_board_person_metrics.sql"
res_tb <- fetch_data_from_sql_file(folder_path_tb, yaml_file_path)
res_tb
```
```{r table1, message=FALSE, warning=FALSE}
# Modify the data frame to show hierarchy
labels <- c(
  "data_set"="Data Source",
  "counts_pts" = "Number of Patients"
)

den_res_formatted <- den_res %>%
  mutate(
    data_set = case_when(
      data_set == "With Image Occurrence" ~ "  • With Image Occurrence",
      data_set == "With Tumor Board Encounter" ~ "  • With Tumor Board Encounter",
      TRUE ~ data_set
    )
  ) %>%
  # Ensure proper ordering
  slice(match(c(
    "Oncology OMOP (Cohort)",
    "  • With Tumor Board Encounter",
    "  • With Image Occurrence",
    "Neural Frame",
    "Philips ISPM"
  ), data_set))


  # Create the formatted table
  create_gt_table_v1(
    data = den_res_formatted,
    columns = c("data_set", "counts_pts"),
    labels = labels
  ) %>%
  tab_style(
    style = cell_text(indent = px(20)),
    locations = cells_body(
      columns = "data_set",
      rows = str_detect(data_set, "^\\s+•")
    )
  )
```

```{r, message=FALSE, warning=FALSE, results='hide'}
sql_ids <- "/workspaces/starr-oncology-data-lake-arpah/src/may_2025/sql/arpah_cohort/arpah_overlap_metrics.sql"
res <- fetch_data_from_sql_file(sql_ids, yaml_file_path)
head(res)
library(tidyr)
overlap_matrix <- res %>%
  mutate(value = TRUE) %>%
  pivot_wider(
    names_from = data_set,
    values_from = value,
    values_fill = FALSE
  )
```


### Overlap between Data Sources

The following plot represents patients overlap between different data sources:

- The connected dots in the middle show which combinations of data sources exist

- The bars show how many patients are in each combination

For example, if dots are connected for "Oncology OMOP" and "Neural Frame", the bar above shows how many patients are in both sources.





## Patient Distribution Across Data Sources
```{r complex_upset, message=FALSE, warning=FALSE}
library(ComplexUpset)
library(ggplot2)

upset(
  overlap_matrix, 
  c("Oncology OMOP", "Image Occurrence", "Neural Frame", "Philips ISPM", "Tumor Board"),    width_ratio=0.1,

  min_size = 10000, wrap=TRUE, set_sizes=FALSE,
  mode = 'inclusive_intersection',
     base_annotations=list(
        'Intersection size'=intersection_size(
            counts=FALSE,text=list(
                vjust=-0.1,
                hjust=-0.1,
                angle=90
            ),
              mode = 'inclusive_intersection',
            mapping=aes(fill='bars_color')
        ) + scale_fill_manual(values=c('bars_color'='#8B0000'), guide='none')
    )
,
  intersections = 'all',
  max_degree = 3
)
```


