---
title: "Oncology Cohort Characteristics"
execute:
  echo: false
---

*Release Version: Feb 2025 (IRB76049)*

The oncology OMOP cohort is defined as all patients with an existing record in STARR-OMOP who are either listed in the Stanford Cancer Registry (also known as Neural Frame), or have had a Tumor Board encounter. As of the February xxxx, 2025 OMOP population, 200,262 patients met the criteria for cancer cohort.

  - Neural Frame: Defined as research-eligible patients with case records in Neural Frame (aka Stanford Cancer Registry)
  - Tumor Board encounter: These encounters are defined using the EPIC patient encounter data tables (24k)

   These metrics have been generated using the latest Stanford OMOP data and Neural Frame data.

## Demographics
### **Age Distribution**

Below is the distribution of persons by year of birth.
```{r, message=FALSE, warning=FALSE, results='hide'}
source("/workspaces/starr-oncology-data-lake-arpah/src/R/all_function.R", encoding = "UTF-8")
```

```{r, message=FALSE, warning=FALSE, results='hide'}
# Parameters

credentials_path <- "/home/rstudio/.config/gcloud/application_default_credentials.json"
project <- "som-rit-phi-oncology-prod"
sql_file_path <- "../sql/arpah_cohort/arpah_age_metrics.sql"
yaml_file_path <-  "/workspaces/starr-oncology-data-lake-arpah/src/sql_params.yml"

df <- fetch_data_from_sql_file(credentials_path, project, sql_file_path, yaml_file_path)
```

```{r, message=FALSE, warning=FALSE}
library(plotly)

# Generate the Plot with Custom Titles
create_bar_plot(
  df,
  x_var = "birth_year",
  y_var = "person_count",
  plot_title = "Birth Year Distribution",
  x_axis_title = "Year of Birth",
  y_axis_title = "Counts (N)"
)
```

```{r, message=FALSE, warning=FALSE, results='hide'}
project_id <- "som-rit-phi-oncology-prod"
sql_file_path<- "../sql/arpah_cohort/arpah_demographic_all.sql"

demog_dat<- fetch_data_from_sql_file(credentials_path, project, sql_file_path, yaml_file_path)
print(demog_dat)
```
```{r, message=FALSE, warning=FALSE, results='hide'}
all.dat = demog_dat %>%
dplyr::mutate(
    Variable = dplyr::case_when(
      grepl("n_age", description) ~ "Age",
      grepl("n_sex", description) ~ "Sex",
      grepl("n_race", description) ~ "Race",
       grepl("n_ethnicity", description) ~ "Ethnicity",
      grepl("n_patients", description) ~ "Total",
      grepl("pct", description) ~ NA_character_  # Skip pure percent entries for the type
    )) %>%
  select(Variable, everything())
  print(all.dat)
dim(all.dat)
colnames(all.dat)[1]<-"Characteristic"
```


```{r, message=FALSE, warning=FALSE, results='hide'}
library(gt)
all.dat$percents=100*(as.numeric(all.dat$percents))
dplyr::glimpse (all.dat)
all.dat =all.dat %>% mutate(values=c("Total number of pts", "0-17", "18-44", "45-64", "65+",
"No OMOP Visit", "Male", "Female", "Other", "Unknown", "American Indian-Alaska Native",
"Asian", "Native Hawaii", "Black", "White", "Other-Unknown", "Hispanic Latino ", "NOT Hispanic Latino", "Other-Missing" ))

 all.dat=all.dat%>% select(Characteristic, values, everything())
```

### **Summary of Patient Population**

The demographic categories examined include Age, Sex, Race, and Ethnicity.

```{r, message=FALSE, warning=FALSE}
all.dat %>% select (-description) %>%
  gt() %>%
  cols_label(
    Characteristic = "Characteristic",
    values="",
    counts = "Count (N)",
    percents = "Percentage (%)"
  ) %>%
  tab_header(
    title = "All Category Metrics - Oncology OMOP",
    subtitle = ""
  ) %>%
  fmt_number(
    columns = where(is.numeric),
    decimals = 0
  ) %>%
  cols_align(
    align = "center",
    columns = vars(counts, percents)  # Specify the columns to center
  ) %>%
  tab_options(
    table.font.size = px(14),
    heading.align = "left",
    table.border.top.color = "darkred",
    table.align = "left"
  ) %>%
  opt_row_striping()%>%
  tab_style(
    style = list(
      cell_text(weight = "bold")  # Make the text bold
    ),
    locations = cells_column_labels()  # Apply to column labels
  ) %>%
  tab_style(
    style = list(
      cell_text(size = px(18))  # Increase font size for column labels
    ),
    locations = cells_column_labels()  # Apply to column labels
  )

```

## Clinical Metrics


```{r, message=FALSE, warning=FALSE, results='hide'}
## pull arpah clinical metrics ##
credentials_path <- "/home/rstudio/.config/gcloud/application_default_credentials.json"
folder_path <- "/workspaces/starr-oncology-data-lake-arpah/src/sql/arpah_clinical"
 project_name = "som-rit-phi-oncology-prod"
res_arpah <- fetch_data_from_sql_yml2(credentials_path, project_name, folder_path)
```

```{r, message=FALSE, warning=FALSE, results='hide'}
credentials_path <- "/home/rstudio/.config/gcloud/application_default_credentials.json"
folder_path_tb <- "/workspaces/starr-oncology-data-lake-arpah/src/sql/tumor_board"
project_name = "som-rit-phi-oncology-prod"
res_tb <- fetch_data_from_sql_yml2(credentials_path, project_name, folder_path_tb)
```
```{r, message=FALSE, warning=FALSE, results='hide'}
colnames(res_arpah)[1]<-"pt_count_arph"

res_tb$sql_file_name=gsub("tumor_board_","", res_tb$sql_file_name)
colnames(res_tb)[1]<-"pt_count_tb"
```
```{r, message=FALSE, warning=FALSE, results='hide'}
## check
res_arpah$sql_file_name[!res_arpah$sql_file_name %in% res_tb$sql_file_name]
res_dat=res_arpah %>% inner_join(res_tb, by="sql_file_name")
print(res_dat)
```
```{r, message=FALSE, warning=FALSE, results='hide'}
res_dat <- res_dat %>%
  mutate(
    metric = case_when(
      sql_file_name == "note_path_cyto_person_metrics.sql" ~ "Number of patients with pathology/cytology clinical report",
      sql_file_name == "note_imaging_person_metrics.sql" ~ "Number of patients with imaging reports, also a proxy for radiology imaging data",
      sql_file_name == "vital_status_person_metrics.sql" ~ "Number of patients with present Hospital or Stanford Cancer Registry death date",
      sql_file_name == "omop_chemo_person_metrics.sql" ~ "Number of patients given chemo medication",
      sql_file_name == "wsi_beaker_path_person_metrics.sql" ~ "Number of patients with WSI (based on EPIC Beaker AP/Pathology, starting from 2022)",
      TRUE ~ NA_character_
    )
  )
print(res_dat)
res_dat=res_dat %>% filter(!is.na(metric))
print(res_dat)

```
```{r, message=FALSE, warning=FALSE, results='hide'}
res_dat<-res_dat%>% select(metric, everything())
```
```{r,, message=FALSE, warning=FALSE}
## add percentages ##
res_dat <- res_dat %>%
  mutate(
    N_perc_arpah = calculate_N_percent(pt_count_arph, den=200262),
    N_perc_tb=calculate_N_percent(pt_count_tb, den=24529)
  )

```
```{r, message=FALSE, warning=FALSE}

res_dat%>%select (metric,N_perc_arpah,N_perc_tb )%>%
  gt() %>%
  cols_label(
    metric = "Clinical Metric Description",
    N_perc_arpah = "Oncology OMOP N(%)* \n (Total=200,262)",
    N_perc_tb="Tumor Board N(%)*\n (Total=24,529)",
  ) %>%
  tab_header(
    title = "",
    subtitle = ""
  ) %>%
  fmt_number(
    columns = where(is.numeric),
    decimals = 0
  ) %>%
  cols_align(
    align = "center",
    columns = vars(N_perc_arpah, N_perc_tb)  # Specify the columns to center
  ) %>%
  tab_options(
    table.font.size = px(14),
    heading.align = "left",
    table.border.top.color = "darkred",
    table.align = "left"
  ) %>%
  opt_row_striping()%>%
  tab_footnote(
    footnote = "* N(%) represents the counts and the corresponding percentage of the total"
  ) %>%
  tab_style(
    style = list(
      cell_text(weight = "bold")  # Make the text bold
    ),
    locations = cells_column_labels()  # Apply to column labels
  )  %>% 
  tab_style(
    style = list(
      cell_text(size = px(16))  # Increase font size for column labels
    ),
    locations = cells_column_labels()  # Apply to column labels
  )

```

### **Thoracic Cancer Sub-Cohort**

The following metrics were identified for individuals with thoracic cancer within the oncology OMOP (200k).

```{r, message=FALSE, warning=FALSE, results='hide'}
credentials_path <- "/home/rstudio/.config/gcloud/application_default_credentials.json"
folder_path_tc <- "/workspaces/starr-oncology-data-lake-arpah/src/sql/scr/thoracic"
project_name = "som-rit-phi-oncology-prod"
res_tc <- fetch_data_from_sql_yml2(credentials_path, project_name, folder_path_tc)
```

```{r, message=FALSE, warning=FALSE, results='hide'}
res_tc <- res_tc%>%
  mutate(
    metric = case_when(
      sql_file_name == "scr_thoracic_person_metrics.sql" ~ "Number of patients in Neural Frame and diagnosed with thoracic cancer",
      sql_file_name == "scr_thoracic_vital_status_person_metrics.sql" ~ "Number of patients in Neural Frame and diagnosed with thoracic cancer with a death date",
      sql_file_name == "scr_thoracic_tb_person_metrics.sql" ~ "Number of patients diagnosed with thoracic cancer and have a tumor board encounter",
      sql_file_name == "scr_thoracic_tb_death.sql" ~ "Number of patients diagnosed with thoracic cancer and have a tumor board encounter with a death date*",
      TRUE ~ NA_character_
    )
  )
print(res_tc)
```
```{r, message=FALSE, warning=FALSE, results='hide'}
res_tc=res_tc %>% select(metric, patient_count)%>% filter(!is.na(metric))%>% arrange(desc(patient_count))

```
```{r, message=FALSE, warning=FALSE}

res_tc%>%
  gt() %>%
  cols_label(
    metric = "Description",
   patient_count = "Patient Count",
  ) %>%
  tab_header(
    title = "",
    subtitle = ""
  ) %>%
  fmt_number(
    columns = where(is.numeric),
    decimals = 0
  ) %>%
  cols_align(
    align = "center",
    columns = vars(patient_count)  # Specify the columns to center
  ) %>%
  tab_options(
    table.font.size = px(14),
    heading.align = "left",
    table.border.top.color = "darkred",
    table.align = "left"
  ) %>%
  opt_row_striping()%>%
  tab_footnote(
    footnote = "*Death date was defined either within STARR-OMOP or Neural Frame"
  )%>%
  tab_style(
    style = list(
      cell_text(weight = "bold")  # Make the text bold
    ),
    locations = cells_column_labels()  # Apply to column labels
  )%>%
  tab_style(
    style = list(
      cell_text(size = px(18))  # Increase font size for column labels
    ),
    locations = cells_column_labels()  # Apply to column labels
  )

```
### **CTSA Metrics**


```{r, message=FALSE, warning=FALSE, results='hide'}
credentials_path <- "/home/rstudio/.config/gcloud/application_default_credentials.json"
folder_path_sa <- "/workspaces/starr-oncology-data-lake-arpah/src/sql/CTSA"
project_name = "som-rit-phi-oncology-prod"
res_sa <- fetch_data_from_sql_yml2(credentials_path, project_name, folder_path_sa)
print(res_sa)
```

```{r, message=FALSE, warning=FALSE, results='hide'}
res_sa=res_sa %>% mutate(pt_count=coalesce(all_years, uniq_pts_vital, uniq_pts_address))
res_sa$pt_count
res_sa=res_sa %>% mutate(metric=case_when(variable_name == 'uniq_pt_address' ~ 'Distinct patients with atleast one address (SDOH)',
variable_name =='uniq_pt_any_insurance_value'~'Distinct patients with an insurance provider (SDOH)',
variable_name =='uniq_pt_loinc'~ 'Distinct patients with a lab test coded in LOINC',
variable_name =='uniq_pt_med_rxnorm'~'Distinct patients with a medication coded in RxNorm/NDC',
variable_name =='uniq_pt_icd_dx'~'Distinct patients with a diagnosis coded in ICD 9/10',
variable_name =='uniq_pt_snomed_dx'~'Distinct patients with a diagnosis coded in SNOMED',
variable_name =='uniq_pt_icd_proc'~'Distinct patients with a procedure coded in ICD 9/10 PCS',
variable_name =='uniq_pt_cpt'~'Distinct patients with a procedure coded in HCPCS or CPT',
variable_name =='uniq_pt_snomed_proc'~'Distinct patients with a procedure coded in SNOMED',
variable_name =='uniq_pt_vital'~'Distinct patients with at least one vital sign coded (height, weight, BP, BMI or temp)',
variable_name =='uniq_pt_smoking' ~ 'Distinct patients with a smoking status coded at least once',
variable_name =='uniq_pt_opioid'~ 'Distinct patients with opioid use disorder coded',  TRUE ~ NA_character_  ))
res_sa
```
```{r, message=FALSE, warning=FALSE, results='hide'}
res_sa =res_sa %>% filter (!is.na(metric))%>% arrange(desc(pt_count))
```


```{r, message=FALSE, warning=FALSE}

res_sa%>% select(metric, pt_count)%>%
  gt() %>%
  cols_label(
    metric = "CTSA Metrics",
   pt_count = "Patient Count",
  ) %>%
  tab_header(
    title = "",
    subtitle = ""
  ) %>%
  fmt_number(
    columns = where(is.numeric),
    decimals = 0
  ) %>%
  cols_align(
    align = "center",
    columns = vars(pt_count)  # Specify the columns to center
  ) %>%
  tab_options(
    table.font.size = px(14),
    heading.align = "left",
    table.border.top.color = "darkred",
    table.align = "left"
  ) %>%
  opt_row_striping()%>%
  tab_footnote(
    footnote = ""
  )%>%
  tab_style(
    style = list(
      cell_text(weight = "bold")  # Make the text bold
    ),
    locations = cells_column_labels()  # Apply to column labels
  )%>%
  tab_style(
    style = list(
      cell_text(size = px(18))  # Increase font size for column labels
    ),
    locations = cells_column_labels()  # Apply to column labels
  )


```

### **Neural Frame Data**
Summary: Neural Frame data encompasses research-eligible patients who have case records in the Neural Frame, also known as the Stanford Cancer Registry. This dataset is categorized into four main areas:

- Outcome: This category includes information related to patient outcomes, such as survival rates, disease progression, and overall health status.

- Diagnoses: This section contains details about the diagnoses made for each patient, including cancer types, staging, and any relevant comorbidities.

- Treatment: This category outlines the various treatments administered to patients, including surgical interventions, chemotherapy, radiation therapy, and other therapeutic approaches.

- Miscellaneous: This section includes additional data that may not fit into the other categories, such as demographic information, patient-reported outcomes, and other relevant clinical data.


```{r, message=FALSE, warning=FALSE, results='hide'}


credentials_path <- "/home/rstudio/.config/gcloud/application_default_credentials.json"
sql_file_path_nf <- "/workspaces/starr-oncology-data-lake-arpah/src/sql/neuralframe/nf_vital_status.sql"
project = "som-rit-phi-oncology-prod"
yaml_file_path <- "/workspaces/starr-oncology-data-lake-arpah/src/sql_params.yml"  # Update this path if necessary"
res_nf <- fetch_data_from_sql_file(credentials_path, project, sql_file_path_nf, yaml_file_path)
print(res_nf)
colnames(res_nf)[1]<-"description"
res_nf$var="Vital Status"

sql_file_path_nf_cc <- "/workspaces/starr-oncology-data-lake-arpah/src/sql/neuralframe/nf_cancer_status.sql"

res_cc <- fetch_data_from_sql_file(credentials_path, project, sql_file_path_nf_cc, yaml_file_path)
print(res_cc)
colnames(res_cc)[1]<-"description"
res_cc$var="Cancer Status"

res_all=rbind(res_nf, res_cc)
res_all
res_all$description[is.na(res_all$description)]<-"Missing (NA)"
res_all
```

```{r, message=FALSE, warning=FALSE}
create_gt_table(res_all, var, description, n_pts, "Neural Frame Outcome Metrics", "", "Patient Count", "Number of Neural Frame Patients (196,564)")

```

```{r, message=FALSE, warning=FALSE, results='hide'}

credentials_path <- "/home/rstudio/.config/gcloud/application_default_credentials.json"
sql_file_path_rec <- "/workspaces/starr-oncology-data-lake-arpah/src/sql/neuralframe/nf_cancer_recurrence.sql"
project = "som-rit-phi-oncology-prod"
yaml_file_path <- "/workspaces/starr-oncology-data-lake-arpah/src/sql_params.yml"  
res_rc <- fetch_data_from_sql_file(credentials_path, project, sql_file_path_rec, yaml_file_path)
print(res_rc)
res_rc$var="Recurrence Type"

```

```{r, message=FALSE, warning=FALSE}
create_gt_table(res_rc, var, recurrencetype1stdescription, n_pts, "Neural Frame Outcome Metrics", "", "Patient Count", "Number of Neural Frame Patients (196,564)")
```


