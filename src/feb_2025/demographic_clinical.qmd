---
title: "Oncology Cohort Characteristics"
execute:
  echo: false
---

*Release Version: Feb 2025 (IRB76049)*

The oncology OMOP cohort is defined as all patients with an existing record in STARR-OMOP who are either listed in the Stanford Cancer Registry (also known as Neural Frame), or have had a Tumor Board encounter. As of the February 2025 OMOP population, 201,554 patients met the criteria for cancer cohort.

  - Neural Frame: Defined as research-eligible patients with case records in Neural Frame (aka Stanford Cancer Registry)
  - Tumor Board encounter: These encounters are defined using the EPIC patient encounter data tables (24k)

   These metrics have been generated using the latest Stanford OMOP data and Neural Frame data.

## Demographics
### **Age Distribution**

Below is the distribution of persons by year of birth.
```{r, message=FALSE, warning=FALSE, results='hide'}
rm(list=ls())
source("/workspaces/starr-oncology-data-lake-arpah/src/R/all_function.R", encoding = "UTF-8")
yaml_file_path <-  "/workspaces/starr-oncology-data-lake-arpah/src/sql_params.yml"

```

```{r, message=FALSE, warning=FALSE, results='hide'}
# Parameters
sql_file_path <- "../sql/arpah_cohort/arpah_age_metrics.sql"
df <- fetch_data_from_sql_file(sql_file_path, yaml_file_path)
```

```{r, message=FALSE, warning=FALSE}
library(plotly)

# Generate the Plot with Custom Titles
create_bar_plot(
  df,
  x_var = "birth_year",
  y_var = "person_count",
  plot_title = "Birth Year Distribution",
  x_axis_title = "Year of Birth",
  y_axis_title = "Counts (N)"
)
```

```{r, message=FALSE, warning=FALSE, results='hide'}
sql_file_path_demog<- "../sql/arpah_cohort/arpah_demographic_all.sql"

demog_dat<- fetch_data_from_sql_file(sql_file_path_demog, yaml_file_path)
print(demog_dat)
```
```{r, message=FALSE, warning=FALSE, results='hide'}
## demographic table ##
all.dat = demog_dat %>%
dplyr::mutate(
    Variable = dplyr::case_when(
      grepl("n_age", description) ~ "Age",
      grepl("n_sex", description) ~ "Sex",
      grepl("n_race", description) ~ "Race",
       grepl("n_ethnicity", description) ~ "Ethnicity",
      grepl("n_patients", description) ~ "Total",
      grepl("pct", description) ~ NA_character_  # Skip pure percent entries for the type
    )) %>%
  select(Variable, everything())
  print(all.dat)
dim(all.dat)
colnames(all.dat)[1]<-"Characteristic"
```


```{r, message=FALSE, warning=FALSE, results='hide'}
library(gt)
all.dat$percents=100*(as.numeric(all.dat$percents))
dplyr::glimpse (all.dat)
all.dat =all.dat %>% mutate(values=c("Total number of pts", "0-17", "18-44", "45-64", "65+",
"No OMOP Visit", "Male", "Female", "Other", "Unknown", "American Indian-Alaska Native",
"Asian", "Native Hawaii", "Black", "White", "Other-Unknown", "Hispanic Latino ", "NOT Hispanic Latino", "Other-Missing" ))

 all.dat=all.dat%>% select(Characteristic, values, everything())
```

### **Summary of Patient Population**

The demographic categories examined include Age, Sex, Race, and Ethnicity.

```{r, message=FALSE, warning=FALSE}
create_gt_table(
  data = all.dat %>% select(-description),
  columns = c("Characteristic", "values", "counts", "percents"),
  labels = c(
    "Characteristic" = "Characteristic",
    "values" = "",
    "counts" = "Count (N)",
    "percents" = "Percentage (%)"
  ),
  title_text = "All Category Metrics - Oncology OMOP",
  subtitle_text = "",
  footnote_text = ""
)
```

## Clinical Metrics


```{r, message=FALSE, warning=FALSE, results='hide'}
## pull arpah clinical metrics ##
folder_path_arpah <- "/workspaces/starr-oncology-data-lake-arpah/src/sql/arpah_clinical"
res_arpah <- fetch_data_from_sql_folder(folder_path_arpah)
print(res_arpah)
```

```{r, message=FALSE, warning=FALSE, results='hide'}
folder_path_tb <- "/workspaces/starr-oncology-data-lake-arpah/src/sql/tumor_board"
res_tb <- fetch_data_from_sql_folder(folder_path_tb)
res_tb
```
```{r, message=FALSE, warning=FALSE, results='hide'}
colnames(res_arpah)[1]<-"pt_count_arph"

res_tb$sql_file_name=gsub("tumor_board_","", res_tb$sql_file_name)
colnames(res_tb)[1]<-"pt_count_tb"
```
```{r, message=FALSE, warning=FALSE, results='hide'}
## check
res_arpah$sql_file_name[!res_arpah$sql_file_name %in% res_tb$sql_file_name]
res_dat=res_arpah %>% inner_join(res_tb, by="sql_file_name")
print(res_dat)
```
```{r, message=FALSE, warning=FALSE, results='hide'}
res_dat <- res_dat %>%
  mutate(
    metric = case_when(
      sql_file_name == "note_path_cyto_person_metrics.sql" ~ "Number of patients with pathology/cytology clinical report",
      sql_file_name == "note_imaging_person_metrics.sql" ~ "Number of patients with imaging reports, also a proxy for radiology imaging data",
      sql_file_name == "vital_status_person_metrics.sql" ~ "Number of patients with present Hospital or Stanford Cancer Registry death date",
      sql_file_name == "omop_chemo_person_metrics.sql" ~ "Number of patients given chemo medication",
      sql_file_name == "wsi_beaker_path_person_metrics.sql" ~ "Number of patients with pathology report",
      TRUE ~ NA_character_
    )
  )
print(res_dat)
#res_dat=res_dat %>% filter(!is.na(metric))


```
```{r, message=FALSE, warning=FALSE, results='hide'}
res_dat<-res_dat%>% select(metric, everything())
```

```{r, message=FALSE, warning=FALSE, results='hide'}
path="/workspaces/starr-oncology-data-lake-arpah/src/sql/arpah_cohort/person_metrics.sql"
den_arpah <- fetch_data_from_sql_file(path, yaml_file_path)
print(den_arpah)

path_tb="/workspaces/starr-oncology-data-lake-arpah/src/sql/tumor_board/tumor_board_person_metrics.sql"
den_tb <- fetch_data_from_sql_file(path_tb, yaml_file_path)
print(den_tb)
```
```{r, message=FALSE, warning=FALSE, results='hide'}
## add percentages ##
den_arpah <- as.numeric(den_arpah)
den_tb <- as.numeric(den_tb)

res_dat <- res_dat %>%
  mutate(
    N_perc_arpah = calculate_N_percent(pt_count_arph, den=den_arpah),
    N_perc_tb=calculate_N_percent(pt_count_tb, den=den_tb)
  )
print(res_dat)
```
```{r, message=FALSE, warning=FALSE}
den_arpah <- as.numeric(den_arpah)
den_tb <- as.numeric(den_tb)

labels <- c(
  "metric" = "Clinical Metric Description",
  "N_perc_arpah" = paste("Oncology OMOP N(%)*\n (Total=", format(den_arpah, big.mark = ","), ")", sep = ""),
  "N_perc_tb" = paste("Tumor Board N(%)*\n (Total=", format(den_tb, big.mark = ","), ")", sep = "")
)

create_gt_table_v1(
  data = res_dat, 
  columns = c("metric", "N_perc_arpah", "N_perc_tb"), 
  labels = labels, 
  footnote_text = "* N(%) represents the counts and the corresponding percentage of the total"
)

```

### **Thoracic Cancer Sub-Cohort**

The following metrics were identified for individuals with thoracic cancer within the oncology OMOP (200k).

```{r, message=FALSE, warning=FALSE, results='hide'}
folder_path_tc <- "/workspaces/starr-oncology-data-lake-arpah/src/sql/scr/thoracic"
res_tc <- fetch_data_from_sql_folder(folder_path_tc)
```

```{r, message=FALSE, warning=FALSE, results='hide'}
res_tc <- res_tc%>%
  mutate(
    metric = case_when(
      sql_file_name == "scr_thoracic_person_metrics.sql" ~ "Number of patients in Neural Frame and diagnosed with thoracic cancer",
      sql_file_name == "scr_thoracic_vital_status_person_metrics.sql" ~ "Number of patients in Neural Frame and diagnosed with thoracic cancer with a death date",
      sql_file_name == "scr_thoracic_tb_person_metrics.sql" ~ "Number of patients diagnosed with thoracic cancer and have a tumor board encounter",
      sql_file_name == "scr_thoracic_tb_death.sql" ~ "Number of patients diagnosed with thoracic cancer and have a tumor board encounter with a death date*",
      TRUE ~ NA_character_
    )
  )
print(res_tc)
```
```{r, message=FALSE, warning=FALSE, results='hide'}
res_tc=res_tc %>% select(metric, patient_count)%>% filter(!is.na(metric))%>% arrange(desc(patient_count))

```
```{r, message=FALSE, warning=FALSE}
labels <- c(
  "metric" = "Description",
  "patient_count" = "Patient Count"
)

create_gt_table_v1(
  data = res_tc, 
  columns = c("metric", "patient_count"), 
  labels = labels, 
  footnote_text = "*Death date was defined either within STARR-OMOP or Neural Frame"
)

```
### **CTSA Metrics**

CTSA metrics are a common set of metrics developed in collaboration with the National Center for Advancing Translational Sciences (NCATS) to compare performance against other institutions within the network, facilitate benchmarking, and measure progress in translating basic science discoveries into clinical applications and patient benefits.

```{r, message=FALSE, warning=FALSE, results='hide'}
folder_path_sa <- "/workspaces/starr-oncology-data-lake-arpah/src/sql/CTSA"

res_sa <- fetch_data_from_sql_folder(folder_path_sa)
print(res_sa)
```

```{r, message=FALSE, warning=FALSE, results='hide'}
res_sa=res_sa %>% mutate(pt_count=coalesce(all_years, uniq_pts_vital, uniq_pts_address))
res_sa$pt_count
res_sa=res_sa %>% mutate(metric=case_when(variable_name == 'uniq_pt_address' ~ 'Distinct patients with atleast one address (SDOH)',
variable_name =='uniq_pt_any_insurance_value'~'Distinct patients with an insurance provider (SDOH)',
variable_name =='uniq_pt_loinc'~ 'Distinct patients with a lab test coded in LOINC',
variable_name =='uniq_pt_med_rxnorm'~'Distinct patients with a medication coded in RxNorm/NDC',
variable_name =='uniq_pt_icd_dx'~'Distinct patients with a diagnosis coded in ICD 9/10',
variable_name =='uniq_pt_snomed_dx'~'Distinct patients with a diagnosis coded in SNOMED',
variable_name =='uniq_pt_icd_proc'~'Distinct patients with a procedure coded in ICD 9/10 PCS',
variable_name =='uniq_pt_cpt'~'Distinct patients with a procedure coded in HCPCS or CPT',
variable_name =='uniq_pt_snomed_proc'~'Distinct patients with a procedure coded in SNOMED',
variable_name =='uniq_pt_vital'~'Distinct patients with at least one vital sign coded (height, weight, BP, BMI or temp)',
variable_name =='uniq_pt_smoking' ~ 'Distinct patients with a smoking status coded at least once',
variable_name =='uniq_pt_opioid'~ 'Distinct patients with opioid use disorder coded',  TRUE ~ NA_character_  ))
res_sa
```
```{r, message=FALSE, warning=FALSE, results='hide'}
res_sa =res_sa %>% filter (!is.na(metric))%>% arrange(desc(pt_count))
```


```{r, message=FALSE, warning=FALSE}
labels <- c(
  "metric" = "CTSA Metrics",
  "pt_count" = "Patient Count"
)

create_gt_table_v1(
  data = res_sa, 
  columns = c("metric", "pt_count"), 
  labels = labels, 
  footnote_text = ""
)
```

### **Neural Frame Data**

```{r, message=FALSE, warning=FALSE, results='hide'}

sql_file_path_nf <- "/workspaces/starr-oncology-data-lake-arpah/src/sql/neuralframe/nf_vital_status.sql"
res_nf <- fetch_data_from_sql_file(sql_file_path_nf, yaml_file_path)
print(res_nf)
colnames(res_nf)[1]<-"description"
res_nf$var="Vital Status"

sql_file_path_nf_cc <- "/workspaces/starr-oncology-data-lake-arpah/src/sql/neuralframe/nf_cancer_status.sql"

res_cc <- fetch_data_from_sql_file(sql_file_path_nf_cc, yaml_file_path)
print(res_cc)
colnames(res_cc)[1]<-"description"
res_cc$var="Cancer Status"

res_all=rbind(res_nf, res_cc)
res_all
res_all$description[is.na(res_all$description)]<-"Missing (NA)"
res_all
```
```{r, message=FALSE, warning=FALSE}
labels <- c(
  "var"="Neural Frame Outcome Metrics",
  "description" = "",
  "n_pts" = "Patient Count"
)

create_gt_table_v1(
  data = res_all, 
  columns = c( "var", "description","n_pts"), 
  labels = labels, 
  footnote_text = "Number of Neural Frame Patients (196,564)"
)
```


```{r, message=FALSE, warning=FALSE, results='hide'}
sql_file_path_rec <- "/workspaces/starr-oncology-data-lake-arpah/src/sql/neuralframe/nf_cancer_recurrence.sql"
res_rc <- fetch_data_from_sql_file(sql_file_path_rec, yaml_file_path)
print(res_rc)
res_rc$var="Recurrence Type"

```

```{r, message=FALSE, warning=FALSE}
labels <- c(
  "recurrencetype1stdescription"="Recurrence Type",
  "n_pts" = "Patient Count"
)

create_gt_table_v1(
  data = res_rc, 
  columns = c( "recurrencetype1stdescription","n_pts"), 
  labels = labels, 
  footnote_text = "Number of Neural Frame Patients (196,564)"
)
```


